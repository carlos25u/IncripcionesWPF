// <auto-generated />
using System;
using IncripcionesWPF.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IncripcionesWPF.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211205204358_Agregando una propiedad propiedad de detallesProfesores")]
    partial class AgregandounapropiedadpropiedaddedetallesProfesores
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("IncripcionesWPF.Entidades.Areas", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("AreaId");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            AreaId = 1,
                            Descripcion = "Biologia"
                        },
                        new
                        {
                            AreaId = 2,
                            Descripcion = "Matematicas"
                        },
                        new
                        {
                            AreaId = 3,
                            Descripcion = "Programacion"
                        },
                        new
                        {
                            AreaId = 4,
                            Descripcion = "Lengua Española"
                        },
                        new
                        {
                            AreaId = 5,
                            Descripcion = "Quimica"
                        });
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Cursos", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = 1,
                            Codigo = "Inf-200",
                            Nombre = "Informatica"
                        },
                        new
                        {
                            CursoId = 2,
                            Codigo = "Ref-500",
                            Nombre = "Refrigeracion"
                        },
                        new
                        {
                            CursoId = 3,
                            Codigo = "Elec-400",
                            Nombre = "Eletricidad"
                        },
                        new
                        {
                            CursoId = 4,
                            Codigo = "Meca-500",
                            Nombre = "Mecanica"
                        },
                        new
                        {
                            CursoId = 5,
                            Codigo = "Cont-420",
                            Nombre = "Contabilidad"
                        });
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.CursosDetalle", b =>
                {
                    b.Property<int>("CursoDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CursoDetalleId");

                    b.HasIndex("CursoId");

                    b.HasIndex("MateriaId");

                    b.ToTable("CursosDetalle");
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Estudiantes", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("EstudianteId");

                    b.ToTable("Estudiantes");

                    b.HasData(
                        new
                        {
                            EstudianteId = 1,
                            Apellido = "Lopez",
                            Celular = "809-433-2344",
                            Correo = "Carlos@gmail.com",
                            Direccion = "Villa tapia",
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 916, DateTimeKind.Local).AddTicks(6977),
                            Nombre = "Carlos",
                            Telefono = "809-887-3454"
                        },
                        new
                        {
                            EstudianteId = 2,
                            Apellido = "Solorin",
                            Celular = "809-123-4563",
                            Correo = "Pedro@gmail.com",
                            Direccion = "Cenovi",
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 916, DateTimeKind.Local).AddTicks(8324),
                            Nombre = "Pedro",
                            Telefono = "809-543-2344"
                        },
                        new
                        {
                            EstudianteId = 3,
                            Apellido = "Gonzales",
                            Celular = "809-233-2343",
                            Correo = "Luis@gmail.com",
                            Direccion = "Porquero",
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 916, DateTimeKind.Local).AddTicks(8348),
                            Nombre = "Luis",
                            Telefono = "809-654-2344"
                        },
                        new
                        {
                            EstudianteId = 4,
                            Apellido = "Rodriguez",
                            Celular = "809-123-5432",
                            Correo = "Johan03@gmail.com",
                            Direccion = "Salcedo",
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 916, DateTimeKind.Local).AddTicks(8365),
                            Nombre = "Johan",
                            Telefono = "809-543-2343"
                        },
                        new
                        {
                            EstudianteId = 5,
                            Apellido = "Polanco",
                            Celular = "809-654-2343",
                            Correo = "Joel@gmail.com",
                            Direccion = "Tenares",
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 916, DateTimeKind.Local).AddTicks(8380),
                            Nombre = "Joel",
                            Telefono = "809-098-4322"
                        });
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Incripciones", b =>
                {
                    b.Property<int>("IncripcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("IncripcionId");

                    b.HasIndex("CursoId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("Incripciones");

                    b.HasData(
                        new
                        {
                            IncripcionId = 1,
                            CursoId = 1,
                            EstudianteId = 1,
                            Fecha = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(1412)
                        },
                        new
                        {
                            IncripcionId = 2,
                            CursoId = 2,
                            EstudianteId = 2,
                            Fecha = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(1794)
                        },
                        new
                        {
                            IncripcionId = 3,
                            CursoId = 3,
                            EstudianteId = 3,
                            Fecha = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(1815)
                        },
                        new
                        {
                            IncripcionId = 4,
                            CursoId = 4,
                            EstudianteId = 4,
                            Fecha = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(1831)
                        },
                        new
                        {
                            IncripcionId = 5,
                            CursoId = 5,
                            EstudianteId = 5,
                            Fecha = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(1900)
                        });
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Materias", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("MateriaId");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            MateriaId = 1,
                            Codigo = "Mat-302",
                            Nombre = "Matematicas"
                        },
                        new
                        {
                            MateriaId = 2,
                            Codigo = "Len-102",
                            Nombre = "Lengua Española"
                        },
                        new
                        {
                            MateriaId = 3,
                            Codigo = "Prog-50",
                            Nombre = "Programacion"
                        },
                        new
                        {
                            MateriaId = 4,
                            Codigo = "Bio-300",
                            Nombre = "Biologia"
                        },
                        new
                        {
                            MateriaId = 5,
                            Codigo = "Qui-200",
                            Nombre = "Quimica"
                        });
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Profesores", b =>
                {
                    b.Property<int>("ProfesorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<int>("AreaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Celular")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("ProfesorId");

                    b.HasIndex("AreaId");

                    b.ToTable("Profesores");

                    b.HasData(
                        new
                        {
                            ProfesorId = 1,
                            Apellidos = "Lopez",
                            AreaId = 1,
                            Celular = "809-123-3343",
                            Correo = "Johan@gmail.com",
                            Direccion = "Cenovi",
                            FechaIngreso = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6073),
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6323),
                            Nombres = "Johan",
                            Telefono = "849-234-1234"
                        },
                        new
                        {
                            ProfesorId = 2,
                            Apellidos = "Villar",
                            AreaId = 2,
                            Celular = "829-123-5432",
                            Correo = "Juan@gmail.com",
                            Direccion = "Cenovi",
                            FechaIngreso = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6905),
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6907),
                            Nombres = "Juan",
                            Telefono = "829-098-5243"
                        },
                        new
                        {
                            ProfesorId = 3,
                            Apellidos = "Villar",
                            AreaId = 3,
                            Celular = "829-126-0156",
                            Correo = "Jorgelis@gmail.com",
                            Direccion = "Tenares",
                            FechaIngreso = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6932),
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6933),
                            Nombres = "Jorgelis",
                            Telefono = "829-543-4421"
                        },
                        new
                        {
                            ProfesorId = 4,
                            Apellidos = "Polanco",
                            AreaId = 4,
                            Celular = "829-454-8567",
                            Correo = "Mariam@gmail.com",
                            Direccion = "Salcedo",
                            FechaIngreso = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6949),
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6950),
                            Nombres = "Mariam",
                            Telefono = "829-123-0134"
                        },
                        new
                        {
                            ProfesorId = 5,
                            Apellidos = "Estrella",
                            AreaId = 5,
                            Celular = "829-0345-6422",
                            Correo = "Maira@gmail.com",
                            Direccion = "Villa Tapia",
                            FechaIngreso = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6966),
                            FechaNacimiento = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(6967),
                            Nombres = "Maira",
                            Telefono = "829-345-1309"
                        });
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.ProfesoresDetalle", b =>
                {
                    b.Property<int>("ProfesorDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProfesorDetalleId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("ProfesoresDetalle");
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Descripcion = "Admin"
                        },
                        new
                        {
                            RolId = 2,
                            Descripcion = "Secretaria"
                        },
                        new
                        {
                            RolId = 3,
                            Descripcion = "Director"
                        },
                        new
                        {
                            RolId = 4,
                            Descripcion = "Tecnico"
                        },
                        new
                        {
                            RolId = 5,
                            Descripcion = "Supervisor"
                        });
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("TEXT");

                    b.Property<int>("RolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellido = "Solorin",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            FechaCreacion = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(8527),
                            Nombre = "Carlos",
                            NombreUsuario = "Admin",
                            RolId = 1
                        },
                        new
                        {
                            UsuarioId = 2,
                            Apellido = "Lopez",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            FechaCreacion = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(9165),
                            Nombre = "Pedro",
                            NombreUsuario = "PedroL",
                            RolId = 2
                        },
                        new
                        {
                            UsuarioId = 3,
                            Apellido = "Santana",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            FechaCreacion = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(9221),
                            Nombre = "Miriam",
                            NombreUsuario = "MiriamS",
                            RolId = 3
                        },
                        new
                        {
                            UsuarioId = 4,
                            Apellido = "Soto",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            FechaCreacion = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(9379),
                            Nombre = "Abelardo",
                            NombreUsuario = "AbelardoS",
                            RolId = 4
                        },
                        new
                        {
                            UsuarioId = 5,
                            Apellido = "Cruz",
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            FechaCreacion = new DateTime(2021, 12, 5, 16, 43, 57, 917, DateTimeKind.Local).AddTicks(9434),
                            Nombre = "Randis",
                            NombreUsuario = "RandisC",
                            RolId = 5
                        });
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.CursosDetalle", b =>
                {
                    b.HasOne("IncripcionesWPF.Entidades.Cursos", "Cursos")
                        .WithMany("Detalle")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncripcionesWPF.Entidades.Materias", "Materias")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cursos");

                    b.Navigation("Materias");
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Incripciones", b =>
                {
                    b.HasOne("IncripcionesWPF.Entidades.Cursos", "Cursos")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncripcionesWPF.Entidades.Estudiantes", "Estudiantes")
                        .WithMany()
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cursos");

                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Profesores", b =>
                {
                    b.HasOne("IncripcionesWPF.Entidades.Areas", "Areas")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Areas");
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.ProfesoresDetalle", b =>
                {
                    b.HasOne("IncripcionesWPF.Entidades.Materias", "Materias")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncripcionesWPF.Entidades.Profesores", "Profesores")
                        .WithMany("Detalle")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materias");

                    b.Navigation("Profesores");
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Usuarios", b =>
                {
                    b.HasOne("IncripcionesWPF.Entidades.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Cursos", b =>
                {
                    b.Navigation("Detalle");
                });

            modelBuilder.Entity("IncripcionesWPF.Entidades.Profesores", b =>
                {
                    b.Navigation("Detalle");
                });
#pragma warning restore 612, 618
        }
    }
}
